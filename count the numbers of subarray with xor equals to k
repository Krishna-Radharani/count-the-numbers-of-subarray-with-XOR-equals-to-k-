int Solution::solve(vector<int> &A, int B) {
      unordered_map<int,int>m;
        int sum=0;
        int cnt=0;
        m[0]=1;
        for(int i=0;i<A.size();i++){
            sum=sum^A[i]; 
            int rem=sum^B; // finding the compliment of the B
            if(m.find(rem)!=m.end()){    // checking if the compliment is available or not
                cnt+=m[rem];  // if found then add the count 
            }
             m[sum]+=1;  // add the count of  the sum to the map
        }
        return cnt;
        
    }
